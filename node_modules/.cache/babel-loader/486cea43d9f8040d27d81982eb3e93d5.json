{"ast":null,"code":"import { apiUrl } from \"../../config/constants\";\nimport axios from \"axios\";\nimport { selectToken } from \"./selectors\";\nimport { appLoading, appDoneLoading, showMessageWithTimeout, setMessage } from \"../appState/actions\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const TOKEN_STILL_VALID = \"TOKEN_STILL_VALID\";\nexport const LOG_OUT = \"LOG_OUT\";\n\nconst loginSuccess = userWithToken => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: userWithToken\n  };\n};\n\nconst tokenStillValid = userWithoutToken => ({\n  type: TOKEN_STILL_VALID,\n  payload: userWithoutToken\n});\n\nexport const logOut = () => ({\n  type: LOG_OUT\n});\nexport const signUp = (name, email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n\n    try {\n      const response = await axios.post(`${apiUrl}/signup`, {\n        name,\n        email,\n        password\n      });\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", true, \"account created\"));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n\n      dispatch(appDoneLoading());\n    }\n  };\n};\nexport const login = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n\n    try {\n      const response = await axios.post(`${apiUrl}/login`, {\n        email,\n        password\n      });\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", false, \"welcome back!\", 1500));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n\n      dispatch(appDoneLoading());\n    }\n  };\n};\nexport const getUserWithStoredToken = () => {\n  return async (dispatch, getState) => {\n    // get token from the state\n    const token = selectToken(getState()); // if we have no token, stop\n\n    if (token === null) return;\n    dispatch(appLoading());\n\n    try {\n      // if we do have a token,\n      // check wether it is still valid or if it is expired\n      const response = await axios.get(`${apiUrl}/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }); // token is still valid\n\n      dispatch(tokenStillValid(response.data));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.message);\n      } else {\n        console.log(error);\n      } // if we get a 4xx or 5xx response,\n      // get rid of the token by logging out\n\n\n      dispatch(logOut());\n      dispatch(appDoneLoading());\n    }\n  };\n};","map":{"version":3,"sources":["/home/alec/Code/GroupProject/Front/src/store/user/actions.js"],"names":["apiUrl","axios","selectToken","appLoading","appDoneLoading","showMessageWithTimeout","setMessage","LOGIN_SUCCESS","TOKEN_STILL_VALID","LOG_OUT","loginSuccess","userWithToken","type","payload","tokenStillValid","userWithoutToken","logOut","signUp","name","email","password","dispatch","getState","response","post","data","error","console","log","message","login","getUserWithStoredToken","token","get","headers","Authorization"],"mappings":"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","sourcesContent":["import { apiUrl } from \"../../config/constants\";\nimport axios from \"axios\";\nimport { selectToken } from \"./selectors\";\nimport {\n  appLoading,\n  appDoneLoading,\n  showMessageWithTimeout,\n  setMessage\n} from \"../appState/actions\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const TOKEN_STILL_VALID = \"TOKEN_STILL_VALID\";\nexport const LOG_OUT = \"LOG_OUT\";\n\nconst loginSuccess = userWithToken => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: userWithToken\n  };\n};\n\nconst tokenStillValid = userWithoutToken => ({\n  type: TOKEN_STILL_VALID,\n  payload: userWithoutToken\n});\n\nexport const logOut = () => ({ type: LOG_OUT });\n\nexport const signUp = (name, email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n    try {\n      const response = await axios.post(`${apiUrl}/signup`, {\n        name,\n        email,\n        password\n      });\n\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", true, \"account created\"));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n\nexport const login = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n    try {\n      const response = await axios.post(`${apiUrl}/login`, {\n        email,\n        password\n      });\n\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", false, \"welcome back!\", 1500));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n\nexport const getUserWithStoredToken = () => {\n  return async (dispatch, getState) => {\n    // get token from the state\n    const token = selectToken(getState());\n\n    // if we have no token, stop\n    if (token === null) return;\n\n    dispatch(appLoading());\n    try {\n      // if we do have a token,\n      // check wether it is still valid or if it is expired\n      const response = await axios.get(`${apiUrl}/me`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      // token is still valid\n      dispatch(tokenStillValid(response.data));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.message);\n      } else {\n        console.log(error);\n      }\n      // if we get a 4xx or 5xx response,\n      // get rid of the token by logging out\n      dispatch(logOut());\n      dispatch(appDoneLoading());\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}